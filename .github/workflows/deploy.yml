name: Deploy and Optimize Static Site

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      LANG: C.UTF-8
      LC_ALL: C.UTF-8

    steps:
      - name: üõ∞Ô∏è Sincronizar c√≥digo con √≥rbita principal
        uses: actions/checkout@v4

      - name: üîß Armar laboratorio Node (v18)
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: ‚öóÔ∏è Alquimia de assets (minificar HTML/CSS/JS)
        shell: bash
        run: |
          set -euo pipefail
          set -x

          npm install -g terser clean-css-cli html-minifier-terser

          rm -rf dist
          mkdir -p dist

          # Copia todo salvo html/css/js y carpetas de trabajo
          rsync -a . dist/ \
            --exclude='*.html' \
            --exclude='*.css' \
            --exclude='*.js' \
            --exclude='node_modules' \
            --exclude='.git*' \
            --exclude='.github' \
            --exclude='dist'

          # Excluir carpetas no deseadas para minificaci√≥n
          EXCLUDES='
            -not -path "./dist/*"
            -not -path "./.git/*"
            -not -path "./.github/*"
            -not -path "./node_modules/*"
          '

          # Minificar HTML (creando directorios padre)
          while IFS= read -r -d '' f; do
            dest="dist/$f"
            mkdir -p "$(dirname "$dest")"
            html-minifier-terser "$f" \
              --collapse-whitespace \
              --remove-comments \
              --minify-css true \
              --minify-js true \
              --charset utf-8 \
              -o "$dest"
          done < <(eval find . -type f -name '"*.html"' $EXCLUDES -print0)

          # Minificar CSS (¬°¬°usar $1 y crear dir!!)
          while IFS= read -r -d '' f; do
            dest="dist/$f"
            mkdir -p "$(dirname "$dest")"
            cleancss -o "$dest" "$f"
          done < <(eval find . -type f -name '"*.css"' $EXCLUDES -print0)

          # Minificar JS (¬°¬°usar $1 y crear dir!!)
          while IFS= read -r -d '' f; do
            dest="dist/$f"
            mkdir -p "$(dirname "$dest")"
            terser "$f" -o "$dest" -c -m
          done < <(eval find . -type f -name '"*.js"' $EXCLUDES -print0)

      - name: üìÇ Escanear artefactos (dist/)
        shell: bash
        run: |
          set -euo pipefail
          set -x
          echo "Resumen dist:"
          find dist -type f | sed 's|^| - |' | head -n 200
          echo "Total de archivos:" $(find dist -type f | wc -l)

      - name: üîê Forja de llaves (sin base64, heredoc intacto)
        shell: bash
        run: |
          set -euo pipefail
          umask 077
          mkdir -p ~/.ssh

          cat > ~/.ssh/id_ed25519 <<'KEY'
          ${{ secrets.SSH_PRIVATE_KEY }}
          KEY

          tr -d '\r' < ~/.ssh/id_ed25519 > ~/.ssh/id_ed25519.clean
          mv ~/.ssh/id_ed25519.clean ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

          echo "Derivando p√∫blica con ssh-keygen..."
          ssh-keygen -y -f ~/.ssh/id_ed25519 > /tmp/derived.pub
          echo -n "Fingerprint derivada: "
          ssh-keygen -lf /tmp/derived.pub

      - name: üóùÔ∏è Jurar lealtad a la host key
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          ssh-keyscan -T 5 -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          ssh-keyscan -T 5 -H 46.62.216.37 >> ~/.ssh/known_hosts || true
          chmod 644 ~/.ssh/known_hosts

      - name: üöÄ Teletransportar dist/ al servidor (tar+ssh)
        shell: bash
        run: |
          set -euo pipefail
          set -x
          cd dist
          tar -cz . | ssh -i ~/.ssh/id_ed25519 -o IdentitiesOnly=yes -o StrictHostKeyChecking=yes -o PasswordAuthentication=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            'mkdir -p /home/escuelaviva/htdocs/escuelaviva.ar && tar -xz -C /home/escuelaviva/htdocs/escuelaviva.ar'

      - name: üß∞ Enderezar permisos (755/644)
        shell: bash
        run: |
          set -euo pipefail
          ssh -i ~/.ssh/id_ed25519 -o IdentitiesOnly=yes -o StrictHostKeyChecking=yes -o PasswordAuthentication=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            'find /home/escuelaviva/htdocs/escuelaviva.ar -type d -exec chmod 755 {} \; && \
             find /home/escuelaviva/htdocs/escuelaviva.ar -type f -exec chmod 644 {} \;'
