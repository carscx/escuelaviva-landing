name: Deploy and Optimize Static Site

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Node para minificar
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      # 3) Optimización (HTML/CSS/JS) → dist/
      - name: ⚡ Install Tools & Optimize Files
        run: |
          npm install -g terser clean-css-cli html-minifier-terser
          mkdir -p dist
          # Copia todo excepto html/css/js y lo ignorable
          rsync -av . dist/ \
            --exclude='*.html' --exclude='*.css' --exclude='*.js' \
            --exclude='node_modules' --exclude='.git*' --exclude='.github' --exclude='dist'
          # HTML
          find . -type f -name "*.html" -not -path "./dist/*" -not -path "./.git/*" \
            -exec html-minifier-terser {} \
              --collapse-whitespace --remove-comments --minify-css true --minify-js true \
              -o dist/{} \;
          # CSS
          find . -type f -name "*.css" -not -path "./dist/*" -not -path "./.git/*" \
            -exec sh -c 'cleancss -o "dist/$0" "$0"' {} \;
          # JS
          find . -type f -name "*.js" -not -path "./dist/*" -not -path "./.git/*" \
            -exec sh -c 'terser "$0" -o "dist/$0" -c -m' {} \;

      # 4) Listado de verificación
      - name: 🧪 Verify optimized 'dist' folder
        run: ls -laR dist

      # 5) Preparar clave SSH (sin base64), saneando CRLF, y probar
      - name: 🔐 Setup SSH + sanity
        shell: bash
        run: |
          set -euo pipefail
          umask 077                      # todo lo que se cree sale 600/700 por defecto
          mkdir -p ~/.ssh
          # escribir la privada (tal cual el secret) y normalizar CRLF
          printf '%s' "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519    # por si acaso
          ssh-keygen -yf ~/.ssh/id_ed25519 > /dev/null  # valida formato de clave

          # known_hosts y prueba
          ssh-keyscan -T 5 ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          ssh -o IdentitiesOnly=yes -o PasswordAuthentication=no -i ~/.ssh/id_ed25519 \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'echo OK && whoami'

      # 6) Deploy de dist/ al docroot y permisos
      - name: 🚀 Deploy Files & Fix Permissions
        run: |
          set -e
          cd dist
          tar -cz . | ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes -o PasswordAuthentication=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            'tar -xz -C /home/escuelaviva/htdocs/escuelaviva.ar'
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes -o PasswordAuthentication=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            'find /home/escuelaviva/htdocs/escuelaviva.ar -type d -exec chmod 755 {} \; && find /home/escuelaviva/htdocs/escuelaviva.ar -type f -exec chmod 644 {} \;'
